{
  "AcceptTeeEula": "accept the Team Explorer Everywhere license agreement now? (Y/N)",
  "AccessDenied": "Access Denied",
  "AddAgentFailed": "Failed to add the agent.  Try again or ctrl-c to quit",
  "AddBuildTag": "Add Build Tag",
  "AgentAddedSuccessfully": "Successfully added the agent",
  "AgentIsNotConfigured": "Agent is not configured.",
  "AgentMachinePoolNameLabel": "agent pool",
  "AgentName": "agent name",
  "AgentReplaced": "Successfully replaced the agent",
  "AlreadyConfiguredError": "Cannot configure. Already configured.",
  "ArgumentNeeded": "'{0}' has to be specified.",
  "ArtifactCommandNotFound": "##vso[artifact.{0}] is not a recognized command for Artifact command extension. TODO: DOC aka link",
  "ArtifactLocationNotSupport": "Unsupport artifact location: {0}",
  "ArtifactLocationRequired": "Artifact location is required.",
  "ArtifactNameRequired": "Artifact Name is required.",
  "ArtifactTypeRequired": "Artifact Type is required.",
  "AssociateArtifact": "Associate Artifact",
  "AssociateArtifactWithBuild": "Associated artifact {0} with build {1}",
  "AttachFileNotExist": "Can't attach (type:{0} name:{1}) file: {2}. File does not exist.",
  "AttachmentExceededMaximum": "Skipping attachment as it exceeded the maximum allowed size: {0}",
  "AuthenticationType": "authentication type",
  "BuildCommandNotFound": "##vso[build.{0}] is not a recognized command for Build command extension. TODO: DOC aka link",
  "BuildNumberRequired": "Build number is required.",
  "BuildTagAddFailed": "Build tag '{0}' was not added successfully.",
  "BuildTagRequired": "Build tag is required.",
  "BuildTagsForBuild": "Build '{0}' has following tags now: {1}",
  "CannotChangePermission": "Cannot change permission of configuration store, report this error. You can still run the agent in interactive mode",
  "CanNotFindLoginUserName": "Cannot find logged in username",
  "CanNotFindService": "Cannot find service {0}",
  "CanNotFindSystemd": "Cannot find if systemd is installed",
  "CanNotGrantPermission": "Cannot grant LogonAsService permission to the user {0}",
  "CanNotInstallService": "Cannot install the service, check the logs for more details ",
  "CanNotRunAgent": "Cannot run. Must configure first.",
  "CanNotSetPermissionForAccount": "Cannot set permission for service account. Check the logs for more details.",
  "CanNotStartService": "Cannot start the service. Check the logs for more details.",
  "CanNotStopService": "Cannot stop the service {0} in a timely fashion. Please stop the service and reconfigure again.",
  "CanNotVerifyLogonAccountPassword": "Cannot verify if the password entered is valid",
  "ClassDirectoriesNotSpecifiedForMultiModule": "Class directories field is not specified. Class files directories field is required for a multi module project to generate code coverage reports.",
  "Cleanup": "Post Job Cleanup",
  "CodeCoverageBuildFileIsEmpty": "Failed to enable code coverage because the build file provided '{0}' is empty. Provide a valid build file and try again.",
  "CodeCoverageCommandNotFound": "##vso[codecoverage.{0}] is not a recognized command for Task command extension. TODO: DOC aka link",
  "CodeCoverageDataIsNull": "No coverage data found. Check the build errors/warnings for more details.",
  "CodeCoverageEnabled": "Successfully enabled '{0}' code coverage for '{1}'",
  "CodeCoveragePublishIsValidOnlyForBuild": "Publishing code coverage works only for 'build'.",
  "CommandNotFound": "Can't find command extension for ##vso[{0}.command]. TODO: DOC aka link",
  "ConfiguredAsRunAsService": "Agent is configured to run as service.",
  "ConnectingToServer": "Connecting to server ...",
  "ConnectSectionHeader": "Connect",
  "CouldNotRemoveService": "Could not delete service '{0}'",
  "CustomLogDoesNotExist": "Log file path is not provided or file doesn't exist: '{0}'",
  "CustomMarkDownSummaryDoesNotExist": "Markdown summary file path is not provided or file doesn't exist: '{0}'",
  "Deleting": "Deleting: {0}",
  "DeletingCredentials": "Removing .Credentials",
  "DeletingSettings": "Removing .Agent",
  "DirectoryIsEmptyForArtifact": "Directory '{0}' is empty. Nothing will be added to build artifact '{1}'.",
  "DirectoryNotFound": "Directory not found: '{0}'",
  "DownloadArtifacts": "Download Artifacts",
  "DownloadArtifactsFailed": "Downloading artifacts failed: {0}",
  "EnterValidValueFor0": "Enter a valid value for {0}.",
  "ErrorOccuredWhilePublishingCCFiles": "Error occured while publishing code coverage files. Error: {0}",
  "EulasSectionHeader": "End User License Agreements",
  "Failed": "Failed: ",
  "FailedDeletingTempDirectory0Message1": "Failed to delete temporary directory '{0}'. {1}",
  "FailedToConfigureService": "Service configuration failed, try configuring again after resolving the error",
  "FailedToConnect": "Failed to connect.  Try again or ctrl-c to quit",
  "FailedToDeleteTempScript": "Failed to delete temporary inline script file '{0}'. {1}",
  "FailedToFindPool": "Failed to find pool name. Try again or ctrl-c to quit",
  "FailedToOpenSCManager": "Failed to Open Service Control Manager",
  "FailedToPublishTestResults": "Failed to publish test results: {0}",
  "FailedToReadFile": "Failed to read {0}. Error : {1}.",
  "FailedToRemoveService": "Can not remove the service, remove the service manually and configure again",
  "FailedToReplaceAgent": "Failed to replace the agent.  Try again or ctrl-c to quit",
  "FileDoesNotExist": "File '{0}' does not exist or is not accessible.",
  "FileNotFound": "File not found: '{0}'",
  "FileUploadProgress": "Total file: {0} ---- Uploaded file: {1}",
  "GetSources": "Get Sources",
  "GitNotFound": "Can't find git from agent external directory.",
  "GroupDoesNotExists": "Group: {0} does not Exist",
  "InstalledGitNotSupport": "The version of the installed Git is less than min-supported Git version {0}.",
  "InvalidBuildOrCoverageTool": "An internal error occurred. Details: Invalid build or code coverage tool provided. Build tool = '{0}'. Coverage tool = '{1}'. ",
  "InvalidBuildXml": "Invalid build xml '{0}'. Error '{1}' occured while parsing the file. Ensure the file provided is well-formed and try again.",
  "InvalidClassFilesDirectory": "Invalid input for 'Class Files Directory' field. It should not be a regular expression or a file path. 'Class Files Directory' accepts comma seperated list of class directories.",
  "InvalidClassFilter": "Class Inclusion/Exclusion filter '{0}' is invalid. Provide a valid filter and try again. Example : +:com.*,+:org.*",
  "InvalidCommandArg": "Command argument '{0}' contains one or more of the following invalid characters: \", \\r, \\n",
  "InvalidConfigFor0TerminatingUnattended": "Invalid configuration provided for {0}. Terminating unattended configuration.",
  "InvalidGroupName": "Invalid Group Name - {0}",
  "InvalidMember": "A new member could not be added to a local group because the member has the wrong account type. If you are configuring on a domain controller, built-in machine accounts cannot be added to local groups. You must use a domain user account instead",
  "InvalidResultFiles": "Invalid results file. Make sure the result format of the file '{0}' matches '{1}' test results format.",
  "InvalidSourceDirectory": "Unable to get source directory. Contact your administrator for more information.",
  "InvalidValueInXml": "Unable to retreive value for '{0}' from the summary file '{1}'. Verify the summary file is well-formed and try again.",
  "InvalidWindowsCredential": "Invalid windows credentials entered. Try again or ctrl-c to quit",
  "IsMultiModuleParameterNotAvailable": "Parameter IsMultiModule is not available. Considering the project as a single module project.",
  "JobCompleted": "{0:u}: Job {1} completed with result: {2}",
  "LinuxServiceConfigured": "Service {0} successfully configured",
  "LinuxServiceStartFailed": "Could not start the service. Start the service manually",
  "ListenerHelp": [
    "Visual Studio Team Services Agent",
    "Copyright (c) Microsoft Corporation",
    "",
    "Run from the directory above the bin agent folder to allow for updates",
    "",
    "Alternatively, you can run the convenience cmd or shell script wrappers.",
    "Arguments will be passed along",
    "",
    "Win  : run.cmd [command(s)] [arguments] [options]",
    "Unix : ./run.sh [command(s)] [arguments] [options]",
    "",
    "Command to configure:",
    "Win  : config.cmd [command(s)] [arguments] [options]",
    "Unix : ./config.sh [command(s)] [arguments] [options]",
    "",
    "Command to uninstall:",
    "Win  : config.cmd remove",
    "Unix : ./config.sh remove",
    "",
    "usage:",
    "bin/Agent.Listener [command(s)] [arguments] [options]",
    "",
    "It is common to just run Agent or Agent.Listener with no arguments for an interactive configuration.",
    "You will be prompted and walked through all options.",
    "",
    "",
    "Commands:",
    "-----------------------------------------------------------------------------",
    "(none)         Interactively configure and then run the agent.",
    "               You will be prompted for data.",
    "configure      Configure the agent and exit.",
    "unconfigure    Unconfigure the agent.",
    "run            Runs the agent interactively.  must be configured.",
    "",
    "",
    "Configure Arguments:",
    "-----------------------------------------------------------------------------",
    "--url                  URL of the server.  Examples:",
    "                       https://myaccount.visualstudio.com or http://onprem:8080/tfs",
    "--agent                Agent name",
    "--pool                 Pool name for agent to join",
    "--windowslogonaccount  Windows logon account name if runasservice option is chosen",
    "--windowslogonpassword Windows logon account password if runasservice option is chosen",
    "--auth                 Authentication type. Valid options are PAT (Personal Access Token),",
    "                       Negotiate (Kerberos or NTLM), Integrated (Windows default credentials) and",
    "                       ALT (Alternate Credentials)",
    "",
    "Options:",
    "-----------------------------------------------------------------------------",
    "--version      Print the version",
    "--help         Display command line help",
    "--unattended   Unattended config. You will not be prompted.",
    "               All answers must be supplied to the command line.",
    "--nostart      Do not start the agent after interactive configuration.",
    "--runasservice Configure the agent as service",
    "--replace      Replace the agent in a pool. If another agent is listening",
    "               by that name, it will start failing with a conflict.",
    "",
    "",
    "Arguments by Auth Type:",
    "-----------------------------------------------------------------------------",
    "PAT:",
    "--token        Personal Access Token data. Best to paste value in.",
    "",
    "Negotiate:",
    "--username     domain\\username or UPN",
    "--password     windows account password",
    "",
    "Integrated: does not take any additional arguments",
    "",
    "ALT:",
    "--username     alternate username",
    "--password     alternate password",
    "",
    "Examples:",
    "-----------------------------------------------------------------------------",
    "Run with no arguments to start.  will configure if not configured yet.",
    "$ bin/Agent.Listener",
    "",
    "Unattend configuration.  Remember to check return codes",
    "bin/Agent.Listener configure --url https://myaccount.visualstudio.com --agent myagent --pool default --nostart --auth PAT --token o4u5...",
    "bin/Agent.Listener run",
    "",
    "Unattend configuration for on-premise TFS with integrated and negotiate authentication",
    "bin/Agent.Listener configure --url http://mylocaltfsserver:8080/tfs --agent myagent --pool default --nostart --auth negotiate --username DEV-BOX\\developer --password MyPassword...",
    "bin/Agent.Listener configure --url http://mylocaltfsserver:8080/tfs --agent myagent --pool default --nostart --auth integrated..."
  ],
  "ListenForJobs": "{0:u}: Listening for Jobs",
  "LocalServiceNotFound": "Can not find local service account",
  "MemberDoesNotExists": "Member: {0} does not Exist",
  "MissingAgent": "The agent no longer exists on the server. Please reconfigure the agent.",
  "MissingConfig": "Cannot connect to server, because config files are missing. Skipping removing agent from the server.",
  "N": "N",
  "NoSpaceOnDisk": "Skipping attachment as it exceeded the maximum allowed size or not available on disk: {0}",
  "NotLinux": "This Agent version is built for Linux. Please install a correct build for your OS.",
  "NotOSX": "This Agent version is built for OSX. Please install a correct build for your OS.",
  "NotWindows": "This Agent version is built for Windows. Please install a correct build for your OS.",
  "OperationFailed": "Error: Operation {0} failed with return code {1}",
  "Password": "password",
  "PathNotExist": "Path not exist: {0}",
  "PersonalAccessToken": "personal access token",
  "PlatformNotSupport": "Running the agent on this platform is not supported. The current platform is {0} and it was built for {1}.",
  "PowerShellNotInstalledMinVersion0": "PowerShell is not installed. Minimum required version: {0}",
  "ProcessCompletedWithCode0Errors1": "Process completed with exit code {0} and had {1} error(s) written to the error stream.",
  "ProcessCompletedWithExitCode0": "Process completed with exit code {0}.",
  "ProcessExitCode": "Exit code {0} returned from process: file name '{1}', arguments '{2}'.",
  "Prompt0": "Enter {0}",
  "Prompt0Default1": "Enter {0} (press enter for {1})",
  "PSScriptError": "PowerShell script completed with {0} errors.",
  "PublishCodeCoverage": "Publish code coverage",
  "PublishedCodeCoverageArtifact": "Published '{0}' as artifact '{1}'",
  "PublishingCodeCoverage": "Publishing coverage summary data to TFS server.",
  "PublishingCodeCoverageFiles": "Publishing code coverage files to TFS server.",
  "PublishingTestResults": "Publishing test results to test run '{0}'",
  "PublishTestResults": "Publish test results",
  "QueueConError": "{0:u}: Agent connect error: {1}. Retrying every {2} seconds until reconnected.",
  "QueueConnected": "{0:u}: Agent reconnected.",
  "ReadingCodeCoverageSummary": "Reading code coverage summary from '{0}'",
  "RegisterAgentSectionHeader": "Register Agent",
  "Replace": "replace? (Y/N)",
  "ResultsCommandNotFound": "##vso[results.{0}] is not a recognized command for Task command extension. TODO: DOC aka link",
  "RMAgentVariableInfo": "ReleaseId={0}, TeamProjectId={1}, ReleaseDefinitionName={2}",
  "RMArtifactDetailsIncomplete": "Cannot find the required information to download the artifact",
  "RMArtifactDirectoryNotFoundError": "The artifact directory does not exist: {0}",
  "RMArtifactDownloadBegin": "Downloading linked artifact: {0}...",
  "RMArtifactDownloadFinished": "Downloaded linked artifact {0}",
  "RMArtifactFolderCreated": "Created artifact folder {0}",
  "RMArtifactIsNotContainerType": "The following is not a server drop artifact: {0}",
  "RMArtifactMatchNotFound": "The build artifact '{0}' does not match any naming patterns, skipping download",
  "RMArtifactNameDirectoryNotFound": "Directory '{0}' does not exist. Falling back to parent directory: {1}",
  "RMArtifactsDownloadFinished": "Finished artifacts download",
  "RMArtifactTypeNotSupported": "Release management does not support download of artifact type {0} in the current version",
  "RMCleanedUpArtifactsDirectory": "Cleaned artifacts directory: {0}",
  "RMCleaningArtifactsDirectory": "Cleaning artifacts directory: {0}",
  "RMDownloadArtifactType": "Downloading artifact of type: {0}",
  "RMDownloadArtifactUnexpectedError": "Unexpected error occurred while downloading artifacts",
  "RMDownloadingArtifactFromFileShare": "Downloading artifact from file share: {0}",
  "RMDownloadingJenkinsArtifacts": "Downloading the artifacts from Jenkins server",
  "RMEnvironmentVariablesAvailable": "Environment variables available are below.  Note that these environment variables can be referred to in the task (in the ReleaseDefinition) by replacing \"_\" with \".\" e.g. AGENT_NAME environment variable can be referenced using Agent.Name in the ReleaseDefinition: {0}",
  "RMErrorDuringArtifactDownload": "An error occurred during download: {0}",
  "RMGotJenkinsArtifactDetails": "Got the Jenkins Artifact Details",
  "RMInitializeTask": "Initialize",
  "RMJenkinsBuildId": "BuildId: {0}",
  "RMJenkinsEndpointNotFound": "Cannot find required information in the job to download the Jenkins artifact: {0}",
  "RMJenkinsJobName": "Job Name: {0}",
  "RMNoArtifactsFound": "No artifact found with relative path: '{0}'",
  "RMNoBuildArtifactsFound": "No artifacts are available in the build {0}. Make sure that the build is publishing an artifact and try again",
  "RMPrepareToGetFromJenkinsServer": "Preparing to get artifacts info from Jenkins server",
  "RMPreparingToDownload": "Preparing to download artifact: {0}",
  "RMPreparingToGetBuildArtifactList": "Preparing to get the list of available artifacts from build",
  "RMRetryingArtifactDownload": "Retrying download...",
  "RMStartArtifactsDownload": "Starting artifacts download...",
  "RMUserChoseToSkipArtifactDownload": "Skipping artifact download based on the setting specified.",
  "RunAgentAsServiceDescription": "run agent as service? (Y/N)",
  "RunningJob": "{0:u}: Running job: {1}",
  "SavedSettings": "{0:u}: Settings Saved.",
  "SavingCredential": "Saving credentials...",
  "ServerUrl": "server URL",
  "ServiceAleadyExists": "Service already exists, it will be replaced",
  "ServiceAlreadyExists": "The service already exists: {0}",
  "ServiceConfigured": "Service {0} successfully configured",
  "ServiceStartedSuccessfully": "Service {0} started successfully",
  "SessionCreateFailed": "Failed to create session. {0}",
  "SessionExist": "A session for this agent already exists.",
  "SessionExistStopRetry": "Stop retry on SessionConflictException after retried for {0} seconds.",
  "ShouldBeAdmin": "Access denied. Please make sure to run the command as an administrator.",
  "Skipping": "Does not exist. Skipping ",
  "SourceDirectoriesNotSpecified": "Source directories field is not specified. Specify valid source directories for code coverage reports to include highlighted source code and try again.",
  "SourceDirectoriesNotSpecifiedForMultiModule": "Source directories field is not specified. Source directories field is required for a multi module project for code coverage reports to include highlighted source code.",
  "Success": "Succeeded: ",
  "SupportedRepositoryEndpointNotFound": "Unable to match any source repository endpoints with any of the supported source providers.",
  "SupportedTaskHandlerNotFound": "Supported task execution handler not found.",
  "SvnBranchCheckedOut": "Checked out branch {0} for repository {1} at revision {2}",
  "SvnEmptyServerPath": "The empty relative server path is mapped to '{0}'.",
  "SvnFileAlreadyExists": "The file {0} already exists",
  "SvnIncorrectRelativePath": "Incorrect relative path '{0}' specified.",
  "SvnMappingDuplicateLocal": "Ignoring duplicate mapping for local path={0}",
  "SvnMappingDuplicateServer": "Ignoring duplicate mapping for server path={0}",
  "SvnMappingIgnored": "The entire mapping set is ignored. Proceeding with the full branch mapping.",
  "SvnNotInstalled": "Can't find installed svn command line utility",
  "SvnSyncingRepo": "Syncing repository: {0} (Svn)",
  "SystemdCannotReload": "Can not reload systemd daemon",
  "SystemdDoesNotExists": "Systemd does not exist, if you are having init.d or any other init system you can manually configure it",
  "TaskCommandNotFound": "##vso[task.{0}] is not a recognized command for Task command extension. TODO: DOC aka link",
  "TeeEula": [
    "Building sources from a TFVC repository requires accepting the Team Explorer Everywhere End User License Agreement. This step is not required for building sources from Git repositories.",
    "",
    "A copy of the Team Explorer Everywhere license agreement can be found at:",
    "  {0}"
  ],
  "TestResultsRemaining": "Test results remaining: {0}. Test run id: {1}",
  "TFSConnectionDownRetrying": "The TFS service is currently unavailable. Error: '{1}'. Retrying to establing a connection - attempt '{0}'.",
  "TotalUploadFiles": "Total files need to uploads {0}",
  "UnableResolveArtifactType": "Can't infer artifact type from artifact location: {0}.",
  "UnableToArchiveResults": "Unable to archive the test results: {0}",
  "UnableToParseBuildTrackingConfig0": "Unable to parse the legacy build tracking configuration. A new build directory will be created instead. The previous directory may be left in an unreclaimed state. Legacy configuration contents: {0}",
  "UnauthorizedAccess": "You do not have access to {0} to create systemd unit file. Did you forget to run with sudo permission?",
  "UninstallingService": "Removing service",
  "UnknownCodeCoverageTool": "Code coverage tool '{0}' is not supported.",
  "UnregisteringAgent": "Removing agent from the server",
  "UpdateBuildNumber": "Update Build Number",
  "UpdateBuildNumberForBuild": "Update build number to {0} for build {1}",
  "UploadArtifact": "Upload Artifact",
  "UploadToFileContainer": "Upload '{0}' to file container: '{1}'",
  "UserName": "user name",
  "Variable0ContainsCyclicalReference": "Unable to expand variable '{0}'. A cyclical reference was detected.",
  "Variable0ExceedsMaxDepth1": "Unable to expand variable '{0}'. The max expansion depth ({1}) was exceeded.",
  "VSTSHostNonZeroReturn": "LegacyVSTSPowerShellHost.exe completed with return code: {0}.",
  "WaitForServiceToStop": "Waiting for service to stop...",
  "WindowsLogonAccountNameDescription": "User account to use for the service",
  "WindowsLogonPasswordDescription": "Password for the account {0}",
  "WorkFolderDescription": "work folder",
  "Y": "Y"
}